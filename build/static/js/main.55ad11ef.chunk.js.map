{"version":3,"sources":["utils/chains.js","assets/tellor_white.svg","utils/time.js","utils/helpers.js","contexts/User.js","components/frontendBoilerplate/CustomTooltip.js","components/frontendBoilerplate/WalletConnect.js","components/frontendBoilerplate/Nav.js","components/frontendBoilerplate/Footer.js","contexts/AppData.js","contexts/SpotPrice.js","contexts/Error.js","components/LinearIndeterminate.js","components/InfoBoxConnected.js","assets/close_icon.svg","components/Loader.js","components/modals/SetupFeedModal.js","utils/queries.js","contexts/Graph.js","components/modals/ApproveTokenModal.js","components/modals/FundFeedModal.js","components/modals/ConfirmedModal.js","components/modals/ErrorModal.js","components/modals/ContainerModal.js","components/Hero.js","App.js","index.js"],"names":["module","exports","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTellorWhite","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","dateHelper","dateArr","Date","toString","split","weekday","month","monthsToDigit","day","parseInt","year","localTime","localTimezone","charAt","toUpperCase","utcRelation","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","digitToMonth","tellorAddressPolygon","tellorAddressMumbai","getAssetBalances","web3","address","chainId","a","trbContractEthereum","eth","Contract","minABI","trbContractPolygon","trbContractMumbai","trbContractGoerli","utils","getBalance","chainMainTokenBalance","fromWei","methods","balanceOf","then","res","trbBalance","main","Math","round","trb","convertToSeconds","amount","type","UserContext","createContext","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","web3Modal","Web3Modal","cacheProvider","User","children","useState","currentUser","setCurrentUser","connected","setConnected","setupUserError","setSetupUserError","eventsOn","setEventsOn","setupUser","user","connect","provider","Web3","getChainId","getAccounts","network","chains","balances","message","useEffect","undefined","clearCachedProvider","window","ethereum","on","accounts","UserContextObject","Provider","value","CustomTooltip","styled","className","Tooltip","arrow","classes","popper","theme","tooltipClasses","color","tooltip","display","alignItems","backgroundColor","fontSize","fontWeight","textAlign","fontFamily","WalletConnect","nav","useContext","showTooltip","setShowTooltip","tooltipAlign","useMediaQuery","query","addr","showTrbBalance","onClick","style","border","open","placement","onMouseEnter","onMouseLeave","slice","Nav","href","alt","rel","Footer","AppDataContext","AppData","assets","setAssets","currencies","setCurrencies","duplicatesRemoved","assetArray","fetch","json","data","forEach","coin","push","symbol","filter","c","index","sort","AppDataContextObj","SpotPriceContext","abiCoder","ethers","AbiCoder","SpotPrice","form","infoBoxDisabled","queryId","setQueryId","queryData","setQueryData","dataArgs","asset","encode","currency","keccak256","SpotPriceContextObj","ErrorContext","Error","ErrorObj","error","setError","CustomLinearProgress","LinearProgress","palette","primary","createTheme","secondary","LinearIndeterminate","ThemeProvider","Box","sx","InfoBoxConnected","SvgCloseIcon","fillRule","clipRule","Loader","loading","cx","cy","r","stroke","SetupFeedModal","parameterForm","tellorAddy","autopayAddy","setLoading","setSetupFeedTxnHash","setThisFeedId","spotPriceData","navigate","useNavigate","handleSetupFeed","reward","startTime","interval","autopay","encodedFeed","feedId","formData","startMonth","startDay","startYear","startHourFirst","startHourSecond","startMinuteFirst","startMinuteSecond","getTime","toWei","tipAmountNumber","tipAmountDecimal","durationAmount","durationType","windowAmount","windowType","autopayABI","setupDataFeed","send","from","transactionHash","catch","err","console","log","appQuery","gql","GraphContext","Graph","graphData","setGraphData","useQuery","fetchPolicy","pollInterval","GraphContextObj","ApproveTokenModal","setupFeedTxnHash","thisFeedId","feedIds","setFeedIds","officialDataFeed","setOfficialDataFeed","txnURL","setTxnURL","feedIdArray","newDataFeedEntities","entity","_feedId","includes","tellorTokenPolygonABI","approve","fundAmount","state","handleApprove","FundFeedModal","useLocation","timezone","fundFeed","fundFeedTxnHash","setupFeedTxnUrl","handleFundFeed","ConfirmedModal","closeModal","fundFeedTxnURL","setFundFeedTxnURL","ErrorModal","errorObj","clientPolygon","ApolloClient","uri","cache","InMemoryCache","clientMumbai","ContainerModal","modal","apolloClient","setApolloClient","tellorAddress","setTellorAddress","autopayAddress","setAutopayAddress","ApolloProvider","client","exact","path","element","initialDropdownValues","initialParameterValues","Hero","dropdownForm","setDropdownForm","setParameterForm","setInfoBoxDisabled","fundFeedDisabled","setFundFeedDisabled","containerModal","setContainerModal","correctNetwork","setCorrectNetwork","userData","handleDropdownChange","event","name","handleParameterChange","document","querySelector","htmlFor","list","onChange","placeholder","spellCheck","map","min","max","App","location","pathname","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.55ad11ef.chunk.js","sourcesContent":["module.exports = {\n    1: \"mainnet\",\n    3: \"ropsten\",\n    4: \"rinkeby\",\n    5: \"goerli\",\n    42: \"kovan\",\n    137: \"matic\",\n    80001: \"mumbai\"\n}","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTellorWhite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 193,\n    height: 54,\n    viewBox: \"0 0 193 54\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.78 23.04H23.48V13.87H15.78V3.58H5.42V13.87H0.73V23.04H5.42V44.39C5.42 52.51 10.39 53.98 18.51 53.98C19.98 53.98 21.94 53.84 23.2 53.7V44.88C22.57 44.95 21.73 45.02 20.54 45.02C15.85 45.02 15.78 41.38 15.78 39.28V23.04ZM50.6509 53.98C61.9209 53.98 67.1009 47.12 68.6409 45.02L60.5209 40.33C59.3309 41.66 56.4609 44.81 50.6509 44.81C48.5509 44.81 41.4109 44.11 40.1509 37.81H70.5309C70.5309 37.81 70.7409 35.92 70.7409 32.98C70.3909 20.59 60.5209 13.87 50.6509 13.87C43.4409 13.87 29.7209 18.07 29.7209 33.89C29.7209 49.71 43.1609 53.98 50.6509 53.98ZM50.5809 23.04C55.8309 23.04 59.2609 26.89 59.6809 30.39H40.4309C40.8509 26.47 44.5609 23.04 50.5809 23.04ZM79.2574 53H89.7574V0.0799971H79.2574V53ZM99.8336 53H110.334V0.0799971H99.8336V53ZM139.38 53.91C150.86 53.91 160.38 44.95 160.38 33.82C160.38 22.83 150.86 13.8 139.38 13.8C127.9 13.8 118.52 22.83 118.52 33.82C118.52 44.95 127.9 53.91 139.38 53.91ZM139.38 22.97C145.33 22.97 149.95 27.66 149.95 33.82C149.95 40.05 145.33 44.81 139.38 44.81C133.36 44.81 128.81 40.19 128.81 33.82C128.81 27.73 133.5 22.97 139.38 22.97ZM192.393 24.02V13.8C189.663 13.73 183.153 14.43 179.233 19.61V14.5H168.803V53H179.233V35.99C179.233 24.3 189.873 23.81 192.393 24.02Z\",\n    fill: \"white\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTellorWhite);\nexport default __webpack_public_path__ + \"static/media/tellor_white.4a00555c.svg\";\nexport { ForwardRef as ReactComponent };","export const timezones = [\n  { zone: 'UTC', relation: 0 },\n  { zone: 'GMT', relation: 0 },\n  { zone: 'ECT', relation: 1 },\n  { zone: 'EET', relation: 2 },\n  { zone: 'ART', relation: 2 },\n  { zone: 'EAT', relation: 3 },\n  { zone: 'MET', relation: 3.5 },\n  { zone: 'NET', relation: 4 },\n  { zone: 'PLT', relation: 5 },\n  { zone: 'IST', relation: 5.5 },\n  { zone: 'BST', relation: 6 },\n  { zone: 'VST', relation: 7 },\n  { zone: 'CTT', relation: 8 },\n  { zone: 'JST', relation: 9 },\n  { zone: 'ACT', relation: 9.5 },\n  { zone: 'AET', relation: 10 },\n  { zone: 'SST', relation: 11 },\n  { zone: 'NST', relation: 12 },\n  { zone: 'MIT', relation: -11 },\n  { zone: 'HST', relation: -10 },\n  { zone: 'AST', relation: -9 },\n  { zone: 'PST', relation: -8 },\n  { zone: 'PNT', relation: -7 },\n  { zone: 'MST', relation: -7 },\n  { zone: 'CST', relation: -6 },\n  { zone: 'EST', relation: -5 },\n  { zone: 'IET', relation: -5 },\n  { zone: 'PRT', relation: -4 },\n  { zone: 'CNT', relation: -3.5 },\n  { zone: 'AGT', relation: -3 },\n  { zone: 'BET', relation: -3 },\n  { zone: 'CAT', relation: -1 },\n]\n\nexport const dateHelper = () => {\n  const todayDate = new Date()\n  const dateArr = todayDate.toString().split(' ')\n  const weekday = dateArr[0]\n  const month = monthsToDigit[dateArr[1]]\n  const day = parseInt(dateArr[2])\n  const year = parseInt(dateArr[3])\n  const localTime = dateArr[4]\n  const localTimezone =\n    dateArr[6].charAt(1).toUpperCase() +\n    dateArr[7].charAt(0).toUpperCase() +\n    dateArr[8].charAt(0).toUpperCase()\n  const utcRelation = dateArr[5]\n\n  return {\n    weekday: weekday,\n    month: month,\n    day: day,\n    year: year,\n    localTime: localTime,\n    localTimezone: localTimezone,\n    utcRelation: utcRelation,\n  }\n}\n\nconst monthsToDigit = {\n  Jan: 1,\n  Feb: 2,\n  Mar: 3,\n  Apr: 4,\n  May: 5,\n  Jun: 6,\n  Jul: 7,\n  Aug: 8,\n  Sep: 9,\n  Oct: 10,\n  Nov: 11,\n  Dec: 12,\n}\n\nexport const digitToMonth = {\n  1: 'Jan',\n  2: 'Feb',\n  3: 'Mar',\n  4: 'Apr',\n  5: 'May',\n  6: 'Jun',\n  7: 'Jul',\n  8: 'Aug',\n  9: 'Sep',\n  10: 'Oct',\n  11: 'Nov',\n  12: 'Dec',\n}\n","import minABI from './minimumABI.json'\nimport { digitToMonth } from './time'\n\n//Globals\nexport const tellorAddressMainnet = '0x88dF592F8eb5D7Bd38bFeF7dEb0fBc02cf3778a0'\nexport const tellorAddressRinekby = '0x88dF592F8eb5D7Bd38bFeF7dEb0fBc02cf3778a0'\nexport const tellorAddressPolygon = '0xE3322702BEdaaEd36CdDAb233360B939775ae5f1'\nexport const tellorAddressMumbai = '0xce4e32fe9d894f8185271aa990d2db425df3e6be'\nexport const tellorAddressGoerli = '0x002E861910D7f87BAa832A22Ac436F25FB66FA24'\nexport const autopayAddressPolygon =\n  '0xD789488E5ee48Ef8b0719843672Bc04c213b648c'\nexport const autopayAddressMumbai = '0x7B49420008BcA14782F2700547764AdAdD54F813'\n\nexport const truncateAddr = (addr) => {\n  return addr.slice(0, 6) + '...' + addr.slice(-4)\n}\n\nexport const getAssetBalances = async (web3, address, chainId) => {\n  //Instantiating Contracts\n  const trbContractEthereum = new web3.eth.Contract(\n    minABI,\n    tellorAddressMainnet\n  )\n  const trbContractPolygon = new web3.eth.Contract(minABI, tellorAddressPolygon)\n  const trbContractMumbai = new web3.eth.Contract(minABI, tellorAddressMumbai)\n  const trbContractGoerli = new web3.eth.Contract(minABI, tellorAddressGoerli)\n  //Function Globals\n  let chainMainTokenBalance\n  let trbBalance\n\n  switch (chainId) {\n    case 1:\n      //Main Chain Balance - ETHEREUM MAINNET\n      chainMainTokenBalance = web3.utils.fromWei(\n        await web3.eth.getBalance(address)\n      )\n      trbBalance = await trbContractEthereum.methods\n        .balanceOf(address)\n        .call()\n        .then((res) => web3.utils.fromWei(res))\n      //Add more assets here if needed\n      return {\n        main: Math.round(chainMainTokenBalance * 100) / 100,\n        trb: Math.round(trbBalance * 100) / 100,\n      }\n    case 4:\n      //Main Chain Balance - RINKEBY\n      chainMainTokenBalance = web3.utils.fromWei(\n        await web3.eth.getBalance(address)\n      )\n      trbBalance = await trbContractEthereum.methods\n        .balanceOf(address)\n        .call()\n        .then((res) => web3.utils.fromWei(res))\n      //Add more assets here if needed\n      return {\n        main: Math.round(chainMainTokenBalance * 100) / 100,\n        trb: Math.round(trbBalance * 100) / 100,\n      }\n    case 5:\n      //Main Chain Balance - GOERLI\n      chainMainTokenBalance = web3.utils.fromWei(\n        await web3.eth.getBalance(address)\n      )\n      trbBalance = await trbContractGoerli.methods\n        .balanceOf(address)\n        .call()\n        .then((res) => web3.utils.fromWei(res))\n      //Add more assets here if needed\n      return {\n        main: Math.round(chainMainTokenBalance * 100) / 100,\n        trb: Math.round(trbBalance * 100) / 100,\n      }\n    case 137:\n      //Main Chain Balance - MATIC/POLYGON MAINNET\n      chainMainTokenBalance = web3.utils.fromWei(\n        await web3.eth.getBalance(address)\n      )\n      trbBalance = await trbContractPolygon.methods\n        .balanceOf(address)\n        .call()\n        .then((res) => web3.utils.fromWei(res))\n      //Add more assets here if needed\n      return {\n        main: Math.round(chainMainTokenBalance * 100) / 100,\n        trb: Math.round(trbBalance * 100) / 100,\n      }\n    case 80001:\n      //Main Chain Balance - MUMBAI\n      chainMainTokenBalance = web3.utils.fromWei(\n        await web3.eth.getBalance(address)\n      )\n      trbBalance = await trbContractMumbai.methods\n        .balanceOf(address)\n        .call()\n        .then((res) => web3.utils.fromWei(res))\n      //Add more assets here if needed\n      return {\n        main: Math.round(chainMainTokenBalance * 100) / 100,\n        trb: Math.round(trbBalance * 100) / 100,\n      }\n    default:\n      return null\n  }\n}\n\n//SO FAR NOT USED, DELETE LATER IF NEEDED\nexport const sortDataByProperty = (prop, arr) => {\n  arr.sort(function (a, b) {\n    if (a[prop] < b[prop]) {\n      return 1\n    } else if (a[prop] > b[prop]) {\n      return -1\n    } else {\n      return 0\n    }\n  })\n  return arr\n}\n\nexport const dateManipulator = (formData) => {\n  //FOR THE FUTURE WHEN WE INCLUDE UTC TIMEZONE\n  //AND LOCAL MACHINE TIME\n  // const timezoneOffset = (new Date().getTimezoneOffset() / 60).toString()\n  // const UTCDate = Math.round(\n  //   new Date(\n  //     `${digitToMonth[formData.startMonth]} ${formData.startDay}, ${\n  //       formData.startYear\n  //     } ${formData.startHourFirst}${formData.startHourSecond}:${\n  //       formData.startMinuteFirst\n  //     }${formData.startMinuteSecond}:00-0${timezoneOffset}:00`\n  //   ).getTime() / 1000\n  // )\n\n  const localDate =\n    new Date(\n      `${digitToMonth[formData.startMonth]} ${formData.startDay}, ${\n        formData.startYear\n      } ${formData.startHourFirst}${formData.startHourSecond}:${\n        formData.startMinuteFirst\n      }${formData.startMinuteSecond}:00`\n    ).getTime() / 1000\n\n  return localDate\n}\n\nexport const convertToSeconds = (amount, type) => {\n  let total\n  switch (type) {\n    case 'minute':\n      total = amount * 60\n      return total\n    case 'minutes':\n      total = amount * 60\n      return total\n    case 'hour':\n      total = amount * 60 * 60\n      return total\n    case 'hours':\n      total = amount * 60 * 60\n      return total\n    case 'day':\n      total = amount * 24 * 60 * 60\n      return total\n    case 'days':\n      total = amount * 24 * 60 * 60\n      return total\n    default:\n      return\n  }\n}\n","import React, { useState, createContext, useEffect } from 'react'\n//Utils\nimport chains from '../utils/chains'\nimport { getAssetBalances } from '../utils/helpers'\n//Web3\nimport Web3 from 'web3'\nimport Web3Modal from 'web3modal'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\n\nexport const UserContext = createContext()\n\n//Web3 Modal Globals\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider, // required\n    options: {\n      infuraId: '52474cef7b964b4fbf8e954a5dfa481b', // required\n    },\n  },\n}\nconst web3Modal = new Web3Modal({\n  providerOptions, // required\n  cacheProvider: true,\n})\n\nconst User = ({ children }) => {\n  //Context State\n  const [currentUser, setCurrentUser] = useState(null)\n  const [connected, setConnected] = useState(false)\n  const [setupUserError, setSetupUserError] = useState(null)\n  const [eventsOn, setEventsOn] = useState(false)\n\n  const setupUser = async () => {\n    try {\n      let user = { web3Modal: web3Modal }\n      user.provider = await web3Modal.connect()\n      user.web3 = new Web3(user.provider)\n      const chainId = await user.web3.eth.getChainId()\n      user.address = (await user.web3.eth.getAccounts())[0]\n      user.network = chains[chainId]\n      user.chainId = chainId\n      user.balances = await getAssetBalances(user.web3, user.address, chainId)\n      return user\n    } catch (err) {\n      // console.log(err);\n      setSetupUserError(err.message)\n    }\n  }\n\n  //UseEffect on \"connected = true\" flag,\n  //sets up user and network\n  useEffect(() => {\n    if (web3Modal && connected) {\n      //if check for when user stops login flow\n      if (currentUser !== undefined && currentUser !== null) return\n      web3Modal.clearCachedProvider()\n      setupUser().then((res) => {\n        setCurrentUser(res)\n      })\n      setEventsOn(true)\n    }\n  }, [connected]) //eslint-disable-line\n\n  //useEffect that checks for when user stops login flow,\n  //and resets.\n  useEffect(() => {\n    if (currentUser === undefined) {\n      setConnected(false)\n    } else if (currentUser === undefined && connected) {\n      setConnected(false)\n    } else if (currentUser !== undefined && currentUser !== null) {\n      setConnected(true)\n    }\n  }, [currentUser, connected])\n\n  //Turning on events subscription\n  //ONLY on first web3 injection\n  // (the \"connected = true\" useEffect),\n  //to prevent memory leaks and\n  //keep event listeners cleaned up.\n  if (currentUser && eventsOn) {\n    // Subscribe to chains change\n    window.ethereum.on('chainChanged', () => {\n      setupUser().then((res) => {\n        setCurrentUser(res)\n      })\n    })\n    // Subscribe to accounts change\n    window.ethereum.on('accountsChanged', async (accounts) => {\n      if (accounts.length === 0) {\n        web3Modal.clearCachedProvider()\n      } else {\n        setupUser().then((res) => {\n          setCurrentUser(res)\n        })\n      }\n    })\n    setEventsOn(false)\n  }\n\n  const UserContextObject = {\n    currentUser: currentUser,\n    connected: connected,\n    setupUserError: setupUserError,\n    setCurrentUser: setCurrentUser,\n    setConnected: setConnected,\n    setSetupUserError: setSetupUserError,\n    setupUser: setupUser,\n  }\n\n  return (\n    <UserContext.Provider value={UserContextObject}>\n      {children}\n    </UserContext.Provider>\n  )\n}\n\nexport default User\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip'\n\nexport const CustomTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: 'rgba(28, 28, 28, 0.9)',\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    width: 'fit-content',\n    height: '34px',\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: 'rgba(28, 28, 28, 0.9)',\n    fontSize: '16px',\n    fontWeight: '300',\n    textAlign: 'center',\n    fontFamily: 'Inconsolata',\n    color: '#ffffff',\n  },\n}))\n","import React, { useContext, useState, useEffect } from 'react'\n//Contexts\nimport { UserContext } from '../../contexts/User'\n//Styles\nimport '../../styles/frontendBoilerplate/WalletConnect.css'\n//Icons\nimport { Jazzicon } from '@ukstv/jazzicon-react'\nimport { CustomTooltip } from './CustomTooltip'\n//Utils\nimport { truncateAddr } from '../../utils/helpers'\nimport { useMediaQuery } from 'react-responsive'\n\nfunction WalletConnect({ nav }) {\n  //Context Data\n  const user = useContext(UserContext)\n  //Component State\n  const [showTooltip, setShowTooltip] = useState(false)\n  //Media Queries\n  const tooltipAlign = useMediaQuery({ query: '(max-width: 850px)' })\n\n  //COMMENT IN FOR DEBUGGING PURPOSES\n  // useEffect(() => {\n  //   console.log(\"User inside WalletConnect\", user);\n  // }, [user])\n\n  //In case user exits MetaMask or Walletconnect\n  //Halfway through login process\n  useEffect(() => {\n    if (!user) return\n    if (\n      user.setupUserError === 'User closed modal' ||\n      user.setupUserError === 'User Rejected'\n    ) {\n      user.setConnected(false)\n      user.setSetupUserError(null)\n    }\n  }, [user])\n\n  const startFlow = () => {\n    if (user) {\n      user.setConnected(true)\n    }\n  }\n\n  const showTrbBalance = () => {\n    setShowTooltip(!showTooltip)\n  }\n\n  const navStylesBorder = { border: '2px solid #ffffff' }\n  const navStylesText = { color: '#ffffff' }\n\n  return (\n    <div\n      className=\"WalletConnect\"\n      onClick={() => startFlow()}\n      style={nav ? navStylesBorder : null}\n    >\n      {user && user.currentUser ? (\n        <CustomTooltip\n          open={showTooltip}\n          title={\n            user.currentUser.balances\n              ? `Your TRB Balance: ${user.currentUser.balances.trb}`\n              : 'To switch accounts or networks, use Metamask extension.'\n          }\n          placement={tooltipAlign ? 'bottom' : 'right'}\n          arrow\n        >\n          <div\n            className=\"WalletConnected\"\n            onMouseEnter={() => showTrbBalance()}\n            onMouseLeave={() => showTrbBalance()}\n            style={nav ? navStylesText : null}\n          >\n            <Jazzicon address={user.currentUser.address} className=\"Jazzicon\" />\n            <p>{`${user.currentUser.network} connected: ${truncateAddr(\n              user.currentUser.address\n            )}`}</p>\n          </div>\n        </CustomTooltip>\n      ) : (\n        <p>connect wallet</p>\n      )}\n    </div>\n  )\n}\n\nexport default WalletConnect\n","import React, { useContext } from 'react'\n//Assets\nimport { ReactComponent as Tellor } from '../../assets/tellor_white.svg'\n//Components\nimport WalletConnect from './WalletConnect'\n//Styles\nimport '../../styles/frontendBoilerplate/Nav.css'\n//Contexts\nimport { UserContext } from '../../contexts/User'\n\nfunction Nav() {\n  const user = useContext(UserContext)\n  return (\n    <div className=\"Nav\">\n      <a\n        href=\"https://tellor.io/\"\n        alt=\"https://tellor.io/\"\n        rel=\"noopener noreferrer\"\n      >\n        <Tellor className=\"TellorLogo\" />\n      </a>\n      {user && user.currentUser ? <WalletConnect nav={true} /> : null}\n    </div>\n  )\n}\n\nexport default Nav\n","import React from \"react\";\nimport \"../../styles/frontendBoilerplate/Footer.css\"\n\nfunction Footer() {\n  return (\n    <div className=\"Footer\">\n      <p className=\"FooterText\">&copy; 2022 Tellor, Inc.</p>\n    </div>\n  )\n}\n\nexport default Footer","import React, { createContext, useEffect, useState } from 'react'\n\nexport const AppDataContext = createContext()\n\nfunction AppData({ children }) {\n  //Component State\n  const [assets, setAssets] = useState(null)\n  const [currencies, setCurrencies] = useState(null)\n\n  //useEffect for getting coinGecko data on app load\n  useEffect(() => {\n    let assetArray = []\n    let duplicatesRemoved\n    fetch('https://api.coingecko.com/api/v3/coins/list?include_platform=true')\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data)\n        //NEED TO FIGURE OUT THE DUPLICATE SITUATION!!!\n        data.forEach((coin) => {\n          assetArray.push(coin.symbol)\n        })\n        duplicatesRemoved = assetArray.filter((c, index) => {\n          return assetArray.indexOf(c) === index\n        })\n        setAssets(duplicatesRemoved.sort())\n      })\n    fetch('https://api.coingecko.com/api/v3/simple/supported_vs_currencies')\n      .then((res) => res.json())\n      .then((data) => {\n        setCurrencies(data.sort())\n      })\n  }, [])\n\n  const AppDataContextObj = {\n    assets: assets,\n    currencies: currencies,\n  }\n\n  return (\n    <AppDataContext.Provider value={AppDataContextObj}>\n      {children}\n    </AppDataContext.Provider>\n  )\n}\n\nexport default AppData\n","import React, { createContext, useState, useEffect } from 'react'\nimport { ethers } from 'ethers'\n\n//Globals\nexport const SpotPriceContext = createContext()\nexport const abiCoder = new ethers.utils.AbiCoder()\n\nfunction SpotPrice({ children, form, infoBoxDisabled }) {\n  //Component State\n  const [queryId, setQueryId] = useState(null)\n  const [queryData, setQueryData] = useState(null)\n\n  useEffect(() => {\n    let dataArgs\n    let data\n    let id\n\n    if (!form && !form.asset) return\n    if (form.asset && !infoBoxDisabled) {\n      dataArgs = abiCoder.encode(\n        ['string', 'string'],\n        [form.asset.toString(), form.currency.toString()]\n      )\n      data = abiCoder.encode(['string', 'bytes'], ['SpotPrice', dataArgs])\n      id = ethers.utils.keccak256(data)\n      setQueryData(data)\n      setQueryId(id)\n    }\n\n    return () => {\n      setQueryId(null)\n      setQueryData(null)\n    }\n  }, [form, infoBoxDisabled]) //eslint-disable-line\n\n  const SpotPriceContextObj = {\n    queryId: queryId,\n    queryData: queryData,\n  }\n\n  return (\n    <SpotPriceContext.Provider value={SpotPriceContextObj}>\n      {children}\n    </SpotPriceContext.Provider>\n  )\n}\n\nexport default SpotPrice\n","import React, { createContext, useState } from 'react'\n\nexport const ErrorContext = createContext()\n\nfunction Error({ children }) {\n  //Component State\n  const [error, setError] = useState(null)\n\n  const ErrorObj = {\n    error: error,\n    setError: setError,\n  }\n\n  return (\n    <ErrorContext.Provider value={ErrorObj}>{children}</ErrorContext.Provider>\n  )\n}\n\nexport default Error\n","import * as React from 'react'\nimport Box from '@mui/material/Box'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport { createTheme, styled, ThemeProvider } from '@mui/material/styles'\n\nconst CustomLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  color: theme.palette.primary.main,\n}))\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#20f092',\n      secondary: 'rgba(32, 240, 146, 0.2)',\n    },\n  },\n})\n\nexport default function LinearIndeterminate() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Box sx={{ width: '50%' }}>\n        <CustomLinearProgress />\n      </Box>\n    </ThemeProvider>\n  )\n}\n","import React, { useContext } from 'react'\nimport '../styles/InfoBoxConnected.css'\n//Contexts\nimport { UserContext } from '../contexts/User'\n\nfunction InfoBoxConnected() {\n  const user = useContext(UserContext)\n\n  return (\n    <>\n      {user && (\n        <div className=\"InfoBoxConnected\">\n          <p>{user.currentUser.address}</p>\n          <p>{`Connected to ${\n            user.currentUser.network.charAt(0).toUpperCase() +\n            user.currentUser.network.slice(1)\n          }`}</p>\n          <p>\n            {user.currentUser.balances && user.currentUser.balances.trb\n              ? `Wallet Balance: ${user.currentUser.balances.trb} TRB`\n              : 'Current chain not TRB supported'}\n          </p>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default InfoBoxConnected\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCloseIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 10,\n    viewBox: \"0 0 10 10\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M9.66634 1.27337L8.72634 0.333374L4.99967 4.06004L1.27301 0.333374L0.333008 1.27337L4.05967 5.00004L0.333008 8.72671L1.27301 9.66671L4.99967 5.94004L8.72634 9.66671L9.66634 8.72671L5.93967 5.00004L9.66634 1.27337Z\",\n    fill: \"#262626\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloseIcon);\nexport default __webpack_public_path__ + \"static/media/close_icon.80116101.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport '../styles/Loader.css'\n\nfunction Loader({ loading }) {\n  return (\n    <div className=\"Loader\" style={{ display: loading ? 'flex' : 'none' }}>\n      <svg\n        className=\"LoaderIcon\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 340 340\"\n      >\n        <circle cx=\"170\" cy=\"170\" r=\"160\" stroke=\"#2dfc9f\" />\n        <circle cx=\"170\" cy=\"170\" r=\"135\" stroke=\"#ababab\" />\n        <circle cx=\"170\" cy=\"170\" r=\"110\" stroke=\"#555555\" />\n        <circle cx=\"170\" cy=\"170\" r=\"85\" stroke=\"#323434\" />\n      </svg>\n    </div>\n  )\n}\n\nexport default Loader\n","import React, { useContext } from 'react'\n//Router\nimport { useNavigate } from 'react-router-dom'\n//Context\nimport { SpotPriceContext, abiCoder } from '../../contexts/SpotPrice'\nimport { UserContext } from '../../contexts/User'\nimport { ErrorContext } from '../../contexts/Error'\n//Utils\nimport { dateManipulator, convertToSeconds } from '../../utils/helpers'\nimport { dateHelper } from '../../utils/time'\nimport autopayABI from '../../utils/autopayABI.json'\n//Components\nimport Loader from '../Loader'\n//Web3\nimport { ethers } from 'ethers'\n\nfunction SetupFeedModal({\n  parameterForm,\n  tellorAddy,\n  autopayAddy,\n  loading,\n  setLoading,\n  setSetupFeedTxnHash,\n  setThisFeedId,\n}) {\n  //Context\n  const user = useContext(UserContext)\n  const spotPriceData = useContext(SpotPriceContext)\n  const error = useContext(ErrorContext)\n  //React-Router-Dom\n  const navigate = useNavigate()\n\n  //Handlers\n  const handleSetupFeed = (parameterForm) => {\n    let reward, startTime, interval, window, autopay, encodedFeed, feedId\n\n    startTime = dateManipulator(parameterForm)\n    reward = user.currentUser.web3.utils.toWei(\n      `${parameterForm.tipAmountNumber}.${parameterForm.tipAmountDecimal}`\n    )\n    interval = convertToSeconds(\n      parameterForm.durationAmount,\n      parameterForm.durationType\n    )\n    window = convertToSeconds(\n      parameterForm.windowAmount,\n      parameterForm.windowType\n    )\n    encodedFeed = abiCoder.encode(\n      ['bytes32', 'address', 'uint256', 'uint256', 'uint256', 'uint256'],\n      [\n        spotPriceData.queryId.toString(),\n        tellorAddy.toString(),\n        reward,\n        startTime,\n        interval,\n        window,\n      ]\n    )\n    feedId = ethers.utils.keccak256(encodedFeed)\n    setThisFeedId(feedId)\n\n    try {\n      autopay = new user.currentUser.web3.eth.Contract(autopayABI, autopayAddy)\n      setLoading(true)\n      autopay.methods\n        .setupDataFeed(\n          tellorAddy,\n          spotPriceData.queryId,\n          reward,\n          startTime,\n          interval,\n          window,\n          spotPriceData.queryData\n        )\n        .send({ from: user.currentUser.address })\n        .then((res) => {\n          setSetupFeedTxnHash(res.transactionHash)\n          setLoading(false)\n          navigate('/approve')\n        })\n        .catch((err) => {\n          error.setError(err.message)\n          setLoading(false)\n        })\n    } catch (err) {\n      console.log(err)\n      error.setError(err.message)\n    }\n  }\n\n  return (\n    <div className=\"VerifyModalContainer\">\n      <h1 className=\"VerifyModalTitle\">Confirmation</h1>\n      <p className=\"VerifyModalMessage\">\n        Confirming the funding of your feed will take three (3) separate\n        transactions.\n      </p>\n      <h4 className=\"VerifyModalSubtitle\">Verify your parameters:</h4>\n      <div className=\"VerifyParameters\">\n        <p>\n          Tip Amount:{' '}\n          <span className=\"bolded\">{`${parameterForm.tipAmountNumber}.${parameterForm.tipAmountDecimal} TRB`}</span>\n        </p>\n        <p>\n          Window:{' '}\n          <span className=\"bolded\">{`${parameterForm.windowAmount} ${parameterForm.windowType}`}</span>\n        </p>\n        <p>\n          Interval:{' '}\n          <span className=\"bolded\">{`${parameterForm.durationAmount} ${parameterForm.durationType}`}</span>\n        </p>\n        <p>\n          Starting:{' '}\n          <span className=\"bolded\">{`${parameterForm.startDay}/${\n            parameterForm.startMonth\n          }/${parameterForm.startYear} at ${parameterForm.startHourFirst}${\n            parameterForm.startHourSecond\n          }:${parameterForm.startMinuteFirst}${\n            parameterForm.startMinuteSecond\n          }, my local time (${dateHelper().localTimezone})`}</span>\n        </p>\n      </div>\n      <div\n        className=\"VerifyModalButton\"\n        onClick={() => handleSetupFeed(parameterForm)}\n      >\n        setup feed\n      </div>\n      <Loader loading={loading} />\n    </div>\n  )\n}\n\nexport default SetupFeedModal\n","import { gql } from '@apollo/client'\n\nexport const appQuery = gql`\n  query {\n    dataFeedFundedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _queryId\n      _feedId\n      _amount\n    }\n    newDataFeedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _token\n      _queryId\n      _feedId\n    }\n    oneTimeTipClaimedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _queryId\n      _token\n      _amount\n    }\n    tipAddedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _token\n      _queryId\n      _amount\n      _queryData\n    }\n    tipClaimedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _feedId\n      _queryId\n      _token\n      _amount\n    }\n  }\n`\n","import React, { createContext, useState, useEffect } from 'react'\n//The Graph\nimport { useQuery } from '@apollo/client'\n//Utils\nimport { appQuery } from '../utils/queries'\n\nexport const GraphContext = createContext()\n\nfunction Graph({ children }) {\n  //Component State\n  const [graphData, setGraphData] = useState({})\n  //Graph Querying every 5 seconds\n  const { loading, error, data } = useQuery(appQuery, {\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n\n  useEffect(() => {\n    if (!data) return\n    setGraphData({\n      data: data,\n      loading: loading,\n      error: error,\n    })\n  }, [data, loading, error])\n\n  const GraphContextObj = {\n    graphData: graphData,\n  }\n  // console.log('graphData', graphData)\n  return (\n    <GraphContext.Provider value={GraphContextObj}>\n      {children}\n    </GraphContext.Provider>\n  )\n}\n\nexport default Graph\n","import React, { useContext, useEffect, useState } from 'react'\nimport '../../styles/modals/ContainerModal.css'\n//Router\nimport { useNavigate } from 'react-router-dom'\n//Context\nimport { UserContext } from '../../contexts/User'\nimport { ErrorContext } from '../../contexts/Error'\nimport { GraphContext } from '../../contexts/Graph'\n//Utils\nimport tellorTokenPolygonABI from '../../utils/tellorTokenPolygonABI.json'\nimport { dateHelper } from '../../utils/time'\n//Components\nimport Loader from '../Loader'\n\nfunction ApproveTokenModal({\n  parameterForm,\n  tellorAddy,\n  autopayAddy,\n  setupFeedTxnHash,\n  thisFeedId,\n}) {\n  //Component State\n  const [feedIds, setFeedIds] = useState(null)\n  const [officialDataFeed, setOfficialDataFeed] = useState(false)\n  //Context\n  const user = useContext(UserContext)\n  const error = useContext(ErrorContext)\n  const graphData = useContext(GraphContext)\n  //Component State\n  const [txnURL, setTxnURL] = useState(null)\n  //React-Router-Dom\n  const navigate = useNavigate()\n  // const { state } = useLocation()\n  // console.log('State from useLocation', state)\n\n  //useEffect for extracting available\n  //feedIds from the graph\n  useEffect(() => {\n    if (!graphData || !graphData.graphData || !graphData.graphData.data) return\n    let feedIdArray = []\n    if (graphData.graphData.data.newDataFeedEntities) {\n      graphData.graphData.data.newDataFeedEntities.forEach((entity) => {\n        feedIdArray.push(entity._feedId)\n      })\n      setFeedIds(feedIdArray)\n    }\n\n    return () => {\n      setFeedIds(null)\n    }\n    //eslint-disable-next-line\n  }, [\n    //eslint-disable-next-line\n    graphData && graphData.graphData && graphData.graphData.data\n      ? graphData.graphData.data.newDataFeedEntities\n      : graphData,\n  ])\n\n  useEffect(() => {\n    if (!feedIds) return\n    if (feedIds.includes(thisFeedId)) {\n      setOfficialDataFeed(true)\n    } else {\n      setOfficialDataFeed(false)\n    }\n  }, [feedIds, thisFeedId, graphData])\n\n  //Comment out for production\n  useEffect(() => {\n    if (!feedIds) return\n    console.log('feedIds', feedIds)\n    console.log('thisFeedId', thisFeedId)\n    console.log('officialDataFeed', officialDataFeed)\n  }, [feedIds, thisFeedId, officialDataFeed])\n\n  useEffect(() => {\n    if (!user || !user.currentUser) return\n    if (user.currentUser.network === 'matic') {\n      setTxnURL(`https://polygonscan.com/tx/${setupFeedTxnHash}`)\n    } else if (user.currentUser.network === 'mumbai') {\n      setTxnURL(`https://mumbai.polygonscan.com/tx/${setupFeedTxnHash}`)\n    }\n  }, [user, setupFeedTxnHash])\n\n  //Helpers\n  const handleApprove = () => {\n    //let tellorProxyAddy = '0x45cAF1aae42BA5565EC92362896cc8e0d55a2126'\n    setOfficialDataFeed(false)\n    try {\n      const trbToken = new user.currentUser.web3.eth.Contract(\n        tellorTokenPolygonABI,\n        tellorAddy\n      )\n\n      trbToken.methods\n        .approve(\n          autopayAddy,\n          user.currentUser.web3.utils.toWei(parameterForm.fundAmount.toString())\n        )\n        .send({ from: user.currentUser.address })\n        .then((res) => {\n          setOfficialDataFeed(false)\n          console.log(res)\n          navigate('/fundfeed', {\n            state: {\n              txnURL: txnURL,\n            },\n          })\n        })\n        .catch((err) => {\n          setOfficialDataFeed(false)\n          console.log(err)\n          error.setError(err.message)\n        })\n    } catch (err) {\n      console.log('CATCH ERR::: ', err)\n      error.setError(err.message)\n    }\n  }\n\n  return (\n    <div className=\"VerifyModalContainer\">\n      <h1 className=\"VerifyModalTitle\">Confirmation</h1>\n      <p className=\"VerifyModalMessage\">\n        Confirming the funding of your feed will take three (3) separate\n        transactions.\n      </p>\n      <h4 className=\"VerifyModalSubtitle\">Your data feed parameters:</h4>\n      <div className=\"VerifyParametersApprove\">\n        <p>\n          Tip Amount:{' '}\n          <span className=\"bolded\">{`${parameterForm.tipAmountNumber}.${parameterForm.tipAmountDecimal} TRB`}</span>\n        </p>\n        <p>\n          Window:{' '}\n          <span className=\"bolded\">{`${parameterForm.windowAmount} ${parameterForm.windowType}`}</span>\n        </p>\n        <p>\n          Interval:{' '}\n          <span className=\"bolded\">{`${parameterForm.durationAmount} ${parameterForm.durationType}`}</span>\n        </p>\n        <p>\n          Starting:{' '}\n          <span className=\"bolded\">{`${parameterForm.startDay}/${\n            parameterForm.startMonth\n          }/${parameterForm.startYear} at ${parameterForm.startHourFirst}${\n            parameterForm.startHourSecond\n          }:${parameterForm.startMinuteFirst}${\n            parameterForm.startMinuteSecond\n          }, my local time (${dateHelper().localTimezone})`}</span>\n        </p>\n        <a\n          className=\"VerifiedButton\"\n          href={txnURL}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Verified: View on PolygonScan\n        </a>\n        <p className=\"ApproveMessage\">\n          <span className=\"bolded\">\n            Now approve your autopay data feed to use TRB for tipping.\n          </span>\n        </p>\n      </div>\n      <div className=\"VerifyModalButton\" onClick={() => handleApprove()}>\n        approve\n      </div>\n      <Loader loading={!officialDataFeed} />\n    </div>\n  )\n}\n\nexport default ApproveTokenModal\n","import React, { useContext, useState } from 'react'\n//Router\nimport { useNavigate, useLocation } from 'react-router-dom'\n//Context\nimport { UserContext } from '../../contexts/User'\nimport { SpotPriceContext } from '../../contexts/SpotPrice'\nimport { ErrorContext } from '../../contexts/Error'\n//Components\nimport Loader from '../Loader'\n//Utils\nimport { dateHelper } from '../../utils/time'\nimport autopayABI from '../../utils/autopayABI.json'\n\nfunction FundFeedModal({ parameterForm, autopayAddy, thisFeedId }) {\n  //Component State\n  const [loading, setLoading] = useState()\n  //Context\n  const user = useContext(UserContext)\n  const spotPriceData = useContext(SpotPriceContext)\n  const error = useContext(ErrorContext)\n  //Router\n  const { state } = useLocation()\n  const navigate = useNavigate()\n\n  //Handlers\n  const handleFundFeed = () => {\n    let autopay\n    try {\n      autopay = new user.currentUser.web3.eth.Contract(autopayABI, autopayAddy)\n      setLoading(true)\n      console.log(parameterForm.fundAmount)\n      autopay.methods\n        .fundFeed(\n          thisFeedId,\n          spotPriceData.queryId,\n          user.currentUser.web3.utils.toWei(parameterForm.fundAmount.toString())\n        )\n        .send({ from: user.currentUser.address })\n        .then((res) => {\n          setLoading(false)\n          navigate('/confirmed', {\n            state: {\n              fundFeedTxnHash: res.transactionHash,\n              setupFeedTxnUrl: state.txnURL,\n            },\n          })\n        })\n        .catch((err) => {\n          console.log(err)\n          error.setError(err.message)\n          setLoading(false)\n        })\n    } catch (err) {\n      console.log(err)\n      error.setError(err.message)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"VerifyModalContainer\">\n      <h1 className=\"VerifyModalTitle\">Confirmation</h1>\n      <p className=\"VerifyModalMessage\">\n        Confirming the funding of your feed will take three (3) separate\n        transactions.\n      </p>\n      <h4 className=\"VerifyModalSubtitle\">Your data feed parameters:</h4>\n      <div className=\"VerifyParametersFund\">\n        <p>\n          Tip Amount:{' '}\n          <span className=\"bolded\">{`${parameterForm.tipAmountNumber}.${parameterForm.tipAmountDecimal} TRB`}</span>\n        </p>\n        <p>\n          Window:{' '}\n          <span className=\"bolded\">{`${parameterForm.windowAmount} ${parameterForm.windowType}`}</span>\n        </p>\n        <p>\n          Interval:{' '}\n          <span className=\"bolded\">{`${parameterForm.durationAmount} ${parameterForm.durationType}`}</span>\n        </p>\n        <p>\n          Starting:{' '}\n          <span className=\"bolded\">{`${parameterForm.startDay}/${\n            parameterForm.startMonth\n          }/${parameterForm.startYear} at ${parameterForm.startHourFirst}${\n            parameterForm.startHourSecond\n          }:${parameterForm.startMinuteFirst}${\n            parameterForm.startMinuteSecond\n          } ${parameterForm.timezone}, my local time (${\n            dateHelper().localTimezone\n          })`}</span>\n        </p>\n        <a\n          className=\"VerifiedButton\"\n          href={state && state.txnURL}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Verified: View on PolygonScan\n        </a>\n      </div>\n      <h4 className=\"VerifyModalSubtitle\">\n        Now verify your funding amount and fund your feed:\n      </h4>\n      <div className=\"VerifyFundParameter\">\n        <p>{`${parameterForm.fundAmount} TRB`}</p>\n      </div>\n      <div className=\"VerifyModalButton\" onClick={() => handleFundFeed()}>\n        fund feed\n      </div>\n      <Loader loading={loading} />\n    </div>\n  )\n}\n\nexport default FundFeedModal\n","import React, { useContext, useEffect, useState } from 'react'\n//Router\nimport { useLocation } from 'react-router-dom'\n//Context\nimport { UserContext } from '../../contexts/User'\n//Utils\nimport { dateHelper } from '../../utils/time'\n\nfunction ConfirmedModal({ parameterForm, closeModal }) {\n  //Component\n  const [fundFeedTxnURL, setFundFeedTxnURL] = useState(null)\n  //Context\n  const user = useContext(UserContext)\n  //Router\n  const { state } = useLocation()\n  console.log(state)\n\n  useEffect(() => {\n    if (!user || !user.currentUser) return\n    if (!state.fundFeedTxnHash) return\n    if (user.currentUser.network === 'matic') {\n      setFundFeedTxnURL(`https://polygonscan.com/tx/${state.fundFeedTxnHash}`)\n    } else if (user.currentUser.network === 'mumbai') {\n      setFundFeedTxnURL(\n        `https://mumbai.polygonscan.com/tx/${state.fundFeedTxnHash}`\n      )\n    }\n  }, [user, state])\n\n  return (\n    <div className=\"VerifyModalContainer\">\n      <h1 className=\"VerifyModalTitle\">Confirmed!</h1>\n      <p className=\"VerifyModalMessage\">\n        Your price feed has been setup and funded.\n      </p>\n      <a\n        href=\"https://tellor.io/\"\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        className=\"CheckLivenessModalButton\"\n        onClick={() => closeModal()}\n      >\n        check liveness\n      </a>\n      <h4 className=\"VerifyModalSubtitle\">Your parameters:</h4>\n      <div className=\"VerifyParametersFund\">\n        <p>\n          Tip Amount:{' '}\n          <span className=\"bolded\">{`${parameterForm.tipAmountNumber}.${parameterForm.tipAmountDecimal} TRB`}</span>\n        </p>\n        <p>\n          Window:{' '}\n          <span className=\"bolded\">{`${parameterForm.windowAmount} ${parameterForm.windowType}`}</span>\n        </p>\n        <p>\n          Interval:{' '}\n          <span className=\"bolded\">{`${parameterForm.durationAmount} ${parameterForm.durationType}`}</span>\n        </p>\n        <p>\n          Starting:{' '}\n          <span className=\"bolded\">{`${parameterForm.startDay}/${\n            parameterForm.startMonth\n          }/${parameterForm.startYear} at ${parameterForm.startHourFirst}${\n            parameterForm.startHourSecond\n          }:${parameterForm.startMinuteFirst}${\n            parameterForm.startMinuteSecond\n          }, my local time (${dateHelper().localTimezone})`}</span>\n        </p>\n        <a\n          className=\"VerifiedButton\"\n          href={state && state.setupFeedTxnUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Verified: View on PolygonScan\n        </a>\n      </div>\n      <h4 className=\"VerifyModalSubtitle\">Your funding amount:</h4>\n      <div className=\"VerifyFundParameter\">\n        <p>{`${parameterForm.fundAmount} TRB`}</p>\n      </div>\n      <a\n        className=\"VerifiedButton\"\n        href={fundFeedTxnURL && fundFeedTxnURL}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Verified: View on PolygonScan\n      </a>\n    </div>\n  )\n}\n\nexport default ConfirmedModal\n","import React, { useContext } from 'react'\nimport { ErrorContext } from '../../contexts/Error'\n\nfunction ErrorModal() {\n  //Contexts\n  const errorObj = useContext(ErrorContext)\n\n  return (\n    <div className=\"VerifyModalContainer\">\n      <h1 className=\"VerifyModalTitle\">Error</h1>\n      <p className=\"VerifyModalMessage\">\n        {errorObj.error ? errorObj.error : null}\n      </p>\n    </div>\n  )\n}\n\nexport default ErrorModal\n","import React, { useContext, useEffect, useState } from 'react'\nimport '../../styles/modals/ContainerModal.css'\nimport { ReactComponent as Close } from '../../assets/close_icon.svg'\n//Router\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\n//Components\nimport SetupFeedModal from './SetupFeedModal'\nimport ApproveTokenModal from './ApproveTokenModal'\nimport FundFeedModal from './FundFeedModal'\nimport ConfirmedModal from './ConfirmedModal'\nimport ErrorModal from './ErrorModal'\n//Contexts\nimport { UserContext } from '../../contexts/User'\nimport Graph from '../../contexts/Graph'\nimport { ErrorContext } from '../../contexts/Error'\n//The Graph\nimport { ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client'\n//Utils\nimport {\n  tellorAddressPolygon,\n  tellorAddressMumbai,\n  autopayAddressPolygon,\n  autopayAddressMumbai,\n} from '../../utils/helpers'\n\n//The Graph\nconst clientPolygon = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/tellor-io/tellorautopaymatichgraph',\n  cache: new InMemoryCache(),\n})\nconst clientMumbai = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/tellor-io/tellorautopaymumbaihgraph',\n  cache: new InMemoryCache(),\n})\n\nfunction ContainerModal({ modal, parameterForm }) {\n  //Component State\n  const [apolloClient, setApolloClient] = useState(clientMumbai)\n  const [tellorAddress, setTellorAddress] = useState(null)\n  const [autopayAddress, setAutopayAddress] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [setupFeedTxnHash, setSetupFeedTxnHash] = useState(null)\n  const [thisFeedId, setThisFeedId] = useState(null)\n  //Contexts\n  const user = useContext(UserContext)\n  const error = useContext(ErrorContext)\n\n  //Helpers\n  const closeModal = () => {\n    modal.style.display = 'none'\n    if (tellorAddress && autopayAddress) {\n      error.setError(null)\n    }\n  }\n\n  //useEffect to set ApolloClient\n  useEffect(() => {\n    if (!user || !user.currentUser) return\n    switch (user.currentUser.network) {\n      case 'matic':\n        setApolloClient(clientPolygon)\n        return\n      case 'mumbai':\n        setApolloClient(clientMumbai)\n        return\n      default:\n        setApolloClient(clientMumbai)\n        return\n    }\n  }, [user])\n  //useEffect for setting tellorAddress\n  //and autopay address\n  useEffect(() => {\n    if (!user || !user.currentUser) return\n    if (user.currentUser.chainId === 80001) {\n      setTellorAddress(tellorAddressMumbai)\n      setAutopayAddress(autopayAddressMumbai)\n    } else if (user.currentUser.chainId === 137) {\n      setTellorAddress(tellorAddressPolygon)\n      setAutopayAddress(autopayAddressPolygon)\n    } else {\n      setTellorAddress(null)\n      setAutopayAddress(null)\n    }\n\n    return () => {\n      setTellorAddress(null)\n      setAutopayAddress(null)\n    }\n  }, [user])\n  //useEffect for setting error message\n  //for wrong network\n  useEffect(() => {\n    if (!tellorAddress) {\n      error.setError(\n        'Please switch your network to Polygon Matic Mainnet or Polygon Mumbai Testnet to set up a data feed. Thank you!'\n      )\n    } else if (tellorAddress) {\n      error.setError(null)\n    }\n\n    return () => {\n      error.setError(null)\n    }\n  }, [tellorAddress]) //eslint-disable-line\n\n  return (\n    <div className=\"ContainerModal\">\n      <div className=\"ContainerModalContent\">\n        <div className=\"ContainerModalCloseContainer\">\n          <Close onClick={closeModal} className=\"close\" />\n        </div>\n        <div className=\"ContainerModalContentContainer\">\n          {error.error ? (\n            <ErrorModal />\n          ) : (\n            <ApolloProvider client={apolloClient}>\n              <Graph>\n                <Router>\n                  <Routes>\n                    <Route\n                      exact\n                      path=\"/\"\n                      element={\n                        <SetupFeedModal\n                          parameterForm={parameterForm}\n                          tellorAddy={tellorAddress}\n                          autopayAddy={autopayAddress}\n                          loading={loading}\n                          setLoading={setLoading}\n                          setSetupFeedTxnHash={setSetupFeedTxnHash}\n                          setThisFeedId={setThisFeedId}\n                        />\n                      }\n                    />\n                    <Route\n                      path=\"/approve\"\n                      element={\n                        <ApproveTokenModal\n                          parameterForm={parameterForm}\n                          tellorAddy={tellorAddress}\n                          autopayAddy={autopayAddress}\n                          setupFeedTxnHash={setupFeedTxnHash}\n                          thisFeedId={thisFeedId}\n                        />\n                      }\n                    />\n                    <Route\n                      path=\"/fundfeed\"\n                      element={\n                        <FundFeedModal\n                          parameterForm={parameterForm}\n                          autopayAddy={autopayAddress}\n                          thisFeedId={thisFeedId}\n                        />\n                      }\n                    />\n                    <Route\n                      path=\"/confirmed\"\n                      element={\n                        <ConfirmedModal\n                          parameterForm={parameterForm}\n                          closeModal={closeModal}\n                        />\n                      }\n                    />\n                  </Routes>\n                </Router>\n              </Graph>\n            </ApolloProvider>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ContainerModal\n","import React, { useState, useContext, useEffect } from 'react'\n//Styles\nimport '../styles/Hero.css'\n//Context\nimport { AppDataContext } from '../contexts/AppData'\nimport { UserContext } from '../contexts/User'\nimport SpotPrice from '../contexts/SpotPrice'\nimport Error from '../contexts/Error'\n//Components\nimport WalletConnect from './frontendBoilerplate/WalletConnect'\nimport LinearIndeterminate from './LinearIndeterminate'\nimport InfoBoxConnected from './InfoBoxConnected'\nimport ContainerModal from './modals/ContainerModal'\n//Utils\nimport { dateHelper } from '../utils/time'\n\nconst initialDropdownValues = {\n  asset: '',\n  currency: 'usd',\n}\n\nconst initialParameterValues = {\n  fundAmount: 1,\n  tipAmountNumber: 0,\n  tipAmountDecimal: 25,\n  windowAmount: 30,\n  windowType: 'minute',\n  durationAmount: 6,\n  durationType: 'hours',\n  startHourFirst: 0,\n  startHourSecond: 0,\n  startMinuteFirst: 0,\n  startMinuteSecond: 0,\n  startDay: dateHelper().day + 1,\n  startMonth: dateHelper().month,\n  startYear: dateHelper().year,\n}\n\nfunction Hero() {\n  //Component State\n  const [dropdownForm, setDropdownForm] = useState(initialDropdownValues)\n  const [parameterForm, setParameterForm] = useState(initialParameterValues)\n  const [infoBoxDisabled, setInfoBoxDisabled] = useState(true)\n  const [fundFeedDisabled, setFundFeedDisabled] = useState(true)\n  const [containerModal, setContainerModal] = useState(null)\n  const [correctNetwork, setCorrectNetwork] = useState(true)\n  //Context\n  const data = useContext(AppDataContext)\n  const userData = useContext(UserContext)\n\n  //Handlers\n  const handleDropdownChange = (event) => {\n    setDropdownForm({\n      ...dropdownForm,\n      [event.target.name]: event.target.value,\n    })\n  }\n  const handleParameterChange = (event) => {\n    setParameterForm({\n      ...parameterForm,\n      [event.target.name]: event.target.value,\n    })\n  }\n  const startModalFlow = () => {\n    containerModal.style.display = 'flex'\n  }\n  //Helpers\n  //useEffect to make sure feed parameters are\n  //valid entries before being able to submit.\n  useEffect(() => {\n    if (!userData.currentUser) return\n    if (userData.currentUser && !infoBoxDisabled && correctNetwork) {\n      setFundFeedDisabled(false)\n    } else {\n      setFundFeedDisabled(true)\n    }\n  }, [userData.currentUser, infoBoxDisabled, correctNetwork])\n  //useEffect to make sure user is on the correct\n  //chain to be able to set up a feed\n  useEffect(() => {\n    if (!userData.currentUser) return\n    if (!userData.currentUser.balances) {\n      setCorrectNetwork(false)\n      setFundFeedDisabled(true)\n    } else {\n      setCorrectNetwork(true)\n    }\n  }, [userData.currentUser])\n  //useEffect to make sure SpotPrice\n  //asset and currency are valid entries\n  //before connecting wallet to page.\n  useEffect(() => {\n    if (!data.assets || !data.currencies) return\n    if (\n      data.assets.includes(dropdownForm.asset) &&\n      data.currencies.includes(dropdownForm.currency) &&\n      dropdownForm.asset !== ''\n    ) {\n      setInfoBoxDisabled(false)\n    } else {\n      setInfoBoxDisabled(true)\n    }\n  }, [dropdownForm, data.assets, data.currencies])\n\n  //Grabbing Modal onload\n  useEffect(() => {\n    const modal = document.querySelector('.ContainerModal')\n    setContainerModal(modal)\n    return () => {\n      setContainerModal(null)\n    }\n  }, [])\n\n  return (\n    <>\n      <div className=\"HeroInnerContainer\">\n        <h1 className=\"HeroHeader\">Fund a Price Feed</h1>\n        <p className=\"HeroMainText\">\n          Already have your{' '}\n          <a\n            href=\"https://querybuilder.tellor.io/spotprice\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            SpotPrice Query ID\n          </a>\n          ? To fund your feed, select your SpotPrice asset and currency, connect\n          your wallet to Polygon or Mumbai chains, and then set your funding\n          parameters.\n        </p>\n        {data.assets ? (\n          <div className=\"HeroDropdowns\">\n            <label htmlFor=\"asset\">Set Asset:</label>\n            <input\n              list=\"assetDropdown\"\n              type=\"text\"\n              name=\"asset\"\n              id=\"assetInput\"\n              className=\"dropdown\"\n              value={dropdownForm.asset}\n              onChange={handleDropdownChange}\n              placeholder=\"Search\"\n              spellCheck={false}\n            />\n            <datalist id=\"assetDropdown\">\n              {data.assets &&\n                data.assets.map((asset) => (\n                  <option key={asset} value={asset} />\n                ))}\n            </datalist>\n            <label htmlFor=\"currency\">Set Currency:</label>\n            <input\n              list=\"currencyDropdown\"\n              type=\"text\"\n              name=\"currency\"\n              className=\"dropdown\"\n              value={dropdownForm.currency}\n              onChange={handleDropdownChange}\n              placeholder=\"Search\"\n              spellCheck={false}\n            />\n            <datalist id=\"currencyDropdown\">\n              {data.currencies &&\n                data.currencies.map((currency) => (\n                  <option key={currency} value={currency} />\n                ))}\n            </datalist>\n          </div>\n        ) : (\n          <LinearIndeterminate />\n        )}\n        <div\n          className={infoBoxDisabled ? 'HeroInfoBox disabled' : 'HeroInfoBox'}\n        >\n          {userData.currentUser ? (\n            <InfoBoxConnected />\n          ) : (\n            <WalletConnect nav={false} />\n          )}\n        </div>\n        <div\n          className={\n            userData.currentUser && !infoBoxDisabled && correctNetwork\n              ? 'HeroSetParameters'\n              : 'HeroSetParameters disabled'\n          }\n        >\n          <p>\n            With{' '}\n            <input\n              type=\"number\"\n              className=\"HeroParameterFeedNumberInputLarge\"\n              name=\"fundAmount\"\n              value={parameterForm.fundAmount}\n              onChange={handleParameterChange}\n            />{' '}\n            TRB to fund your feed, this autopay will tip your reporter (\n            <input\n              type=\"number\"\n              min={0}\n              max={9}\n              className=\"HeroParameterFeedNumberInputSmall\"\n              name=\"tipAmountNumber\"\n              value={parameterForm.tipAmountNumber}\n              onChange={handleParameterChange}\n            />\n            .\n            <input\n              type=\"number\"\n              min={0}\n              max={99}\n              className=\"HeroParameterFeedNumberInputLarge\"\n              name=\"tipAmountDecimal\"\n              value={parameterForm.tipAmountDecimal}\n              onChange={handleParameterChange}\n            />\n            ) TRB, as a reward, for data reported within a{' '}\n            <input\n              type=\"number\"\n              className=\"HeroParameterFeedNumberInputLarge\"\n              name=\"windowAmount\"\n              value={parameterForm.windowAmount}\n              onChange={handleParameterChange}\n            />\n            <select\n              type=\"text\"\n              className=\"HeroParameterDropdownInput\"\n              name=\"windowType\"\n              value={parameterForm.windowType}\n              onChange={handleParameterChange}\n            >\n              <option value=\"minute\">minute</option>\n              <option value=\"hour\">hour</option>\n              <option value=\"day\">day</option>\n            </select>{' '}\n            window every{' '}\n            <input\n              type=\"number\"\n              className=\"HeroParameterFeedNumberInputLarge\"\n              name=\"durationAmount\"\n              value={parameterForm.durationAmount}\n              onChange={handleParameterChange}\n            />\n            <select\n              type=\"text\"\n              className=\"HeroParameterDropdownInput\"\n              name=\"durationType\"\n              value={parameterForm.durationType}\n              onChange={handleParameterChange}\n            >\n              <option value=\"minutes\">minutes</option>\n              <option value=\"hours\">hours</option>\n              <option value=\"days\">days</option>\n            </select>{' '}\n            beginning at{' '}\n            <input\n              type=\"number\"\n              min={0}\n              max={2}\n              className=\"HeroParameterFeedNumberInputSmall\"\n              name=\"startHourFirst\"\n              value={parameterForm.startHourFirst}\n              onChange={handleParameterChange}\n            />\n            <input\n              type=\"number\"\n              min={0}\n              max={9}\n              className=\"HeroParameterFeedNumberInputSmall\"\n              name=\"startHourSecond\"\n              value={parameterForm.startHourSecond}\n              onChange={handleParameterChange}\n            />\n            :\n            <input\n              type=\"number\"\n              min={0}\n              max={5}\n              className=\"HeroParameterFeedNumberInputSmall\"\n              name=\"startMinuteFirst\"\n              value={parameterForm.startMinuteFirst}\n              onChange={handleParameterChange}\n            />\n            <input\n              type=\"number\"\n              min={0}\n              max={9}\n              className=\"HeroParameterFeedNumberInputSmall\"\n              name=\"startMinuteSecond\"\n              value={parameterForm.startMinuteSecond}\n              onChange={handleParameterChange}\n            />{' '}\n            my local time, on{' '}\n            <input\n              type=\"number\"\n              min={1}\n              max={31}\n              className=\"HeroParameterFeedNumberInputMedium\"\n              name=\"startDay\"\n              value={parameterForm.startDay}\n              onChange={handleParameterChange}\n            />\n            <input\n              type=\"number\"\n              min={1}\n              max={12}\n              className=\"HeroParameterFeedNumberInputMedium\"\n              name=\"startMonth\"\n              value={parameterForm.startMonth}\n              onChange={handleParameterChange}\n            />\n            <select\n              type=\"text\"\n              className=\"HeroParameterDropdownInput\"\n              name=\"startYear\"\n              value={parameterForm.startYear}\n              onChange={handleParameterChange}\n            >\n              <option value=\"2022\">2022</option>\n              <option value=\"2023\">2023</option>\n              <option value=\"2024\">2024</option>\n              <option value=\"2025\">2025</option>\n            </select>\n            (DD/MM/YYYY).\n          </p>\n        </div>\n        <div\n          className={\n            fundFeedDisabled ? 'HeroFundFeed disabled' : 'HeroFundFeed'\n          }\n          onClick={() => startModalFlow()}\n        >\n          <p>verify and fund</p>\n        </div>\n      </div>\n      <SpotPrice form={dropdownForm} infoBoxDisabled={infoBoxDisabled}>\n        <Error>\n          <ContainerModal\n            modal={containerModal}\n            parameterForm={parameterForm}\n          />\n        </Error>\n      </SpotPrice>\n    </>\n  )\n}\n\nexport default Hero\n","import React, { useEffect } from 'react'\n//Components\nimport Nav from './components/frontendBoilerplate/Nav'\nimport Footer from './components/frontendBoilerplate/Footer'\nimport Hero from './components/Hero'\n//Styles\nimport './App.css'\n\nfunction App() {\n  useEffect(() => {\n    if (window.location.pathname !== '/') {\n      window.location.assign('/')\n    }\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <div className=\"HeroContainer\">\n        <Hero />\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport User from './contexts/User'\nimport AppData from './contexts/AppData'\n\nReactDOM.render(\n  <User>\n    <AppData>\n      <App />\n    </AppData>\n  </User>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}